{% extends 'base.html.twig' %}

{% block title %}Liste des Factures{% endblock %}

{% block body %}
    <section class="factures">
        <div class="container">
            <h1>Liste des Factures</h1>

            {# Afficher le formulaire #}
            {{ form_start(form) }}
                {{ form_widget(form) }}
                <button type="button" class="button" onclick="validerFormulaire()">Valider</button>
            {{ form_end(form) }}

            <div class="listeFactures" hx-target="this" hx-swap="outerHTML">
                 {% include 'facture/factureParDate.html.twig' %}
            </div>
        </div>
    </section>
{% endblock %}

{% block javascripts %}
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

    <script>
        var selectedFactures = [];

        // Fonction pour mettre à jour l'affichage des sélections
        function updateSelectionDisplay() {
            var displayContent = '';
            console.log(selectedFactures);
            if (selectedFactures.length === 0) {
                displayContent = 'Aucune facture sélectionnée.';
            } else {
                selectedFactures.forEach(function (facture) {
                    displayContent += "Facture ID: " + facture.id + "<br>";

                    // Diviser les chaînes en tableaux
                    var quantiteArray = facture.quantite.split(',');
                    var nomProduitArray = facture.nomProduit.split(',');

                    // Afficher chaque produit avec sa quantité successivement
                    for (var i = 0; i < quantiteArray.length; i++) {
                        displayContent += nomProduitArray[i].trim() +
                            " : " + quantiteArray[i].trim() + "<br>";
                    }

                    displayContent += "<hr>";
                });
            }

            $('#factures-selectionnees').html(displayContent);
        }

        // Fonction pour réinitialiser les sélections
        function resetSelections() {
            selectedFactures = [];
            updateSelectionDisplay();
        }

        // Ajouter un gestionnaire d'événements au bouton de validation
        $('#submit-form-btn').click(function () {
            // Ajoutez votre logique ici pour traiter les factures sélectionnées
            console.log("Factures sélectionnées : ", selectedFactures);
        });

        // Fonction pour gérer la sélection des factures
        function handleFactureSelection(checkbox) {
            console.log(checkbox);
            var factureId = $(checkbox).data('facture-id');
            var quantite = $(checkbox).data('quantite');
            var nomProduit = $(checkbox).data('nom-produit');

            // Déboguer la valeur de data-debug
            var debugValue = $(checkbox).data('debug');
            console.log("Valeur de data-debug : " + debugValue);

            if ($(checkbox).prop('checked')) {
                // Convertir quantite en chaîne de caractères
                var processedQuantite = quantite.toString();

                selectedFactures.push({
                    id: factureId,
                    quantite: processedQuantite,
                    nomProduit: nomProduit
                });
            } else {
                selectedFactures = selectedFactures.filter(function (facture) {
                    return facture.id !== factureId;
                });
            }

            // Mettre à jour l'affichage des sélections
            updateSelectionDisplay();
        }

        function validerFormulaire() {
            // RECUPERE LA VALEUR DE LA DATE
            var dateValue = document.getElementById('{{ form.dateReservation.vars.id }}').value;

            // Effectue une requête AJAX
            fetch('/factures/' + dateValue, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                },
            })
                .then(response => response.text())
                .then(data => {
                    // Mets à jour le contenu de la div listeFactures avec la réponse
                    document.querySelector('.listeFactures').innerHTML = data;

                    // Réinitialise les sélections après le changement de date
                    resetOnDateChange();
                })
                .catch(error => console.error('Erreur lors de la requête:', error));
        }
    </script>


    <script>
        function validerFormulaire() {
            // RECUPERE LA VALEUR DE LA DATE
            var dateValue = document.getElementById('{{ form.dateReservation.vars.id }}').value;

            // Effectue une requête AJAX
            fetch('/factures/' + dateValue, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                },
            })
                .then(response => response.text())
                .then(data => {
                    // Mets à jour le contenu de la div listeFactures avec la réponse
                    document.querySelector('.listeFactures').innerHTML = data;

                    // Réinitialise les sélections après le changement de date
                    resetOnDateChange();
                })
                .catch(error => console.error('Erreur lors de la requête:', error));
        }

        function validerFormulaire() {
            // RECUPERE LA VALEUR DE LA DATE
            var dateValue = document.getElementById('{{ form.dateReservation.vars.id }}').value;
            resetSelections();
            // Effectue une requête AJAX
            fetch('/factures/' + dateValue, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                },
            })
                .then(response => response.text())
                .then(data => {
                    // Mets à jour le contenu de la div listeFactures avec la réponse
                    document.querySelector('.listeFactures').innerHTML = data;
                })
                .catch(error => console.error('Erreur lors de la requête:', error));
        }
    </script>

    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

{% endblock %}